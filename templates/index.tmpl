<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>jsMind</title>
    <link type="text/css" rel="stylesheet" href="/static/css/jsmind.css"/>
    <link rel="stylesheet" href="/static/css/normalize.min.css">
    <link rel="stylesheet" href="/static/css/animate.min.css">
    <link rel="stylesheet" href="/static/css/style.css">
    <style>
        #btn-close-modal {
            width: 100%;
            text-align: center;
            cursor: pointer;
            color: #fff;
        }
    </style>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        .top {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .top h1 {
            margin-left: 20px;
        }

        .top a {
            margin: 20px;
        }

        .container {
            display: flex;
            height: calc(100% - 100px); /* 减去头部的高度 */
        }

        .container-right {
            flex: 1;
            min-width: 90%;
            max-width: 90%;
            margin-left: 50px;
            background-color: white;
            display: inline;
        }

        #jsmind_container {
            flex: 1;
            min-width: 90%;
            max-width: 90%;
            margin-left: 50px;
            background-color: white;
            overflow-y: auto; /* 垂直滚动条 */
            display: inline;
        }

        .collapsed {
            width: 0 !important;
            overflow: hidden;
        }


        .popup-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9999;
        }

        .popup-content {
            position: fixed;
            bottom: 0;
            right: 0;
            width: 300px;
            height: 250px;
            background-color: white;
            transform: translateY(100%);
            transition: transform 0.3s ease;
            padding: 20px;
        }

        .popup-container.show .popup-content {
            transform: translateY(0);
        }

        .button {
            display: inline-block;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            font-weight: bold;
        }

        .button:hover {
            background-color: #45a049;
        }

        .button:active {
            background-color: #3e8e41;
        }

         pre {
             background-color: #f4f4f4;
             padding: 10px;
             border-radius: 5px;
         }

        pre code {
            font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
            font-size: 14px;
            color: #333;
        }

        table {
            min-width: 50%;
            width: auto;
            border-collapse: collapse;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border: 1px solid #000;
        }

        th {
            background-color: #ccc;
            color: #fff;
        }

        h1 {
            font-size: 2em;
            font-weight: bold;
        }

        h2 {
            font-size: 1.5em;
            font-weight: bold;
        }

        h3 {
            font-size: 1.17em;
            font-weight: bold;
        }

        h4 {
            font-size: 1em;
            font-weight: bold;
        }

        h5 {
            font-size: 0.83em;
            font-weight: bold;
        }

        h6 {
            font-size: 0.67em;
            font-weight: bold;
        }

    </style>
</head>
<body>
<div class="container">
    <div class="sidebar" id="lvc-nav">
        <ul class="lvc-nav">
            {{range $index, $item := .treeList}}
            <li class="nav-pic1 next-layer" title="{{ $item.GroupName}}">
                <a>{{ $item.GroupName}}</a>
                {{ if $item.Children }}
                <ol>
                    {{range $i, $v := $item.Children}}
                    <li note-key="{{ $v.NoteKey}}" title="{{ $v.NoteName}}">{{ $v.NoteName}}</li>
                    {{ end }}
                </ol>
                {{ end }}
            </li>
            {{ end}}
        </ul>
        <button type="button" class="btn-nav"></button>
    </div>
    <div class="container-right">
        <div class="top">
            <h1 id="note-title"></h1>
            <div id="currentNoteKey" style="display: none;">
            </div>
            <a id="demo01" href="#" class="button">查看内容</a>
        </div>
        <div id="jsmind_container"></div>
    </div>
</div>


<script type="text/javascript" src="/static/js/jsmind.js"></script>
<script type="text/javascript" src="/static/js/jsmind.draggable-node.js"></script>
<!--<script type="text/javascript" src="/static/js/jsmind.shell.js"></script>-->
<script type="text/javascript" src="/static/js/jquery-1.11.0.min.js"></script>
<script type="text/javascript" src="/static/js/layer/layer.js"></script>
<script type="text/javascript">
    var _jm = null;

    function load_jsmind(note_key) {
        url = "/mind/" + note_key
        $.ajax({
            url: url,
            type: "GET",
            data: {},
            success: function(data) {
                var mind = {
                    meta: {
                        name: 'demo',
                        author: 'demo@demo.com',
                        version: '0.2',
                    },
                    format: 'node_tree',
                    data: data,
                };
                var options = {
                    container: 'jsmind_container',
                    editable: false,
                    theme: 'primary',
                    log_level: 'debug',
                    shortcut: {
                        handles: {
                            test: function (j, e) {
                                console.log(j);
                            },
                        },
                        mapping: {
                            test: 89,
                        },
                    },
                    view: {
                        expander_style: 'char',
                    },
                };
                _jm = new jsMind(options);
                _jm.show(mind);
            },
            error: function(xhr, status, error) {
                alert("请求失败：" + error);
            },
        });
    }
</script>

<script>
    $("#demo01").click(function () {
        var note_key = $("#currentNoteKey").html()
        if (note_key !== "") {
            var selected_node = _jm.get_selected_node();
            if (!!selected_node) {
                url = "/note/"+note_key+"/node/" + selected_node.id
                $.ajax({
                    url: url,
                    type: "GET",
                    data: {},
                    success: function(data) {
                        if (data.status === 200) {
                            layer.open({
                                type: 1,   //0-4的选择,（1代表page层）
                                area: ['95%', '95%'],
                                // shade: [0],  //不显示遮罩
                                // border: [0], //不显示边框
                                resize: false,
                                shadeClose: true,
                                title: [data.title],
                                bgcolor: '#eee', //设置层背景色
                                content: "<div style=\"padding: 20px;\">" + data.content + "</div>",
                                // shift: 'top' //从上动画弹出
                            });
                        } else {
                            alert(data.error_msg)
                        }
                    },
                });
            }
        }
    })
</script>

<script type="text/javascript">
    $(document).ready(function () {
        //展开收起
        $(".btn-nav").click(function () {
            $(".sidebar").toggleClass("lvc-close")
            $("ol").toggleClass("small-ol")
            $(".next-layer ol").hide()

            if ($("#lvc-nav").hasClass('lvc-close')) {
                $(".next-layer ").removeClass("arrow")
                $(".sidebar").width("auto")
            }
        })

        //选中状态
        $(".lvc-nav li").click(function () {
            $(this).siblings().find('ol').hide()
            $(this).addClass("active").siblings().removeClass("active")
            $("#currentNoteKey").html("")
            $("#jsmind_container").html("")
        })

        //选中子集清除父级active
        $("ol>li").click(function (e) {
            console.log('ol>li clicked')
            e.stopPropagation()
            $(this).parent().parent().removeClass("active")
            $("#jsmind_container").html("")
            $("#note-title").html($(this).attr("title"))
            $("#currentNoteKey").html($(this).attr("note-key"))
            load_jsmind($(this).attr("note-key"));
        })

        //二级导航展开收起
        $(".next-layer").click(function () {
            $(this).children("ol").toggle();
            $(this).toggleClass("arrow").siblings().removeClass("arrow")
        })

        $("ol li").click(function () {
            if ($("ol").hasClass('small-ol')) {
                $(".small-ol").hide();
                $(this).parent().parent().addClass("active")
            }
        })
    })
</script>

</body>
</html>
